import { WorldPosition, MapBlockIndex, UnitHashIndex } from "./position.js";
import { UnitHashHandler } from "./unitHashHandler.js";
import * as camera from "./camera.js";
import { UnitDrawHandler } from "./drawHandler.js";
import { timeDelta } from "./gameTime.js";
console.log("Unit Module Loading...");
export class GameUnit {
    constructor(x, y, team) {
        this._hp = this.getBasicHp();
        this._hpMax = this.getBasicHp();
        this._hpRecoverRate = this.getBasicHpRecoverRate();
        this._team = team;
        this._postion = new WorldPosition(x, y);
        this._unitHash = new UnitHashHandler(this);
        this._drawHandler = new UnitDrawHandler(this);
        GameUnit.addUnit(this);
    }
    static update() {
        for (var i = 0; i < this._unitList.length; i++) {
            this._unitList[i].updateSelf();
        }
    }
    static clearAllUnits() {
        console.log("清除所有單位");
        if (GameUnit._unitList.length > 0)
            GameUnit._unitList.splice(0, GameUnit._unitList.length);
    }
    static getUnitCount() {
        return this._unitList.length;
    }
    static removeDeadUnitFromList(units) {
        let counter = 0;
        while (counter < units.length) {
            if (units[counter].isDead()) {
                units.splice(counter, 1);
            }
            else {
                counter += 1;
            }
        }
    }
    static getUnit(index) {
        return this._unitList[index];
    }
    static addUnit(unit) {
        if (!GameUnit._unitList.includes(unit))
            GameUnit._unitList.push(unit);
    }
    static removeUnit(unit) {
        if (!GameUnit._unitList.includes(unit))
            return;
        GameUnit._unitList.splice(GameUnit._unitList.indexOf(unit), 1);
        unit._unitHash.removeSelf();
    }
    dead() {
        this.unitDeadAction();
    }
    updateSelf() {
        this.drawSelf();
        this.recoverHp();
        this.checkDead();
    }
    isDead() {
        return (this._hp <= 0);
    }
    toString() {
        return `<GameUnit:${this._team.getName()}>`;
    }
    getTeam() {
        return this._team;
    }
    getPosition() {
        return this._postion.copy();
    }
    getDrawHandler() {
        return this._drawHandler;
    }
    getDrawPosition() {
        return camera.worldToCameraPosition(this._postion);
    }
    getMapBlockIndex() {
        return MapBlockIndex.fromWorldPosition(this._postion);
    }
    getUnitHashIndex() {
        return UnitHashIndex.fromWorldPosition(this._postion);
    }
    changeHp(delta) {
        this._hp = Math.min(this._hp + delta, this._hpMax);
    }
    setPosition(x, y) {
        this._postion.set(x, y);
    }
    movePosition(delta_x, delta_y) {
        this._postion.move(delta_x, delta_y);
    }
    positionInInteractiveDistance(position) {
        let interactiveDistance = this.getInteractiveDistance();
        let distance = this.getMapBlockIndex().getPathDistance(position);
        return (distance != null && interactiveDistance != null && distance <= interactiveDistance);
    }
    recoverHp() {
        this.changeHp(this._hpRecoverRate * timeDelta);
    }
    checkDead() {
        if (this.isDead()) {
            this.dead();
        }
    }
    unitDeadAction() {
        GameUnit.removeUnit(this);
        this._unitHash.removeSelf();
    }
}
GameUnit._unitList = [];
export class BuildingUnit extends GameUnit {
    constructor(x, y, team) {
        super(x, y, team);
        BuildingUnit.addBuildingUnit(this);
    }
    static clearAllBuildingUnit() {
        this._buildingUnitList.splice(0, this._buildingUnitList.length);
    }
    static getBuildingUnitCount() {
        return this._buildingUnitList.length;
    }
    static getBuildingUnit(index) {
        return this._buildingUnitList[index];
    }
    static addBuildingUnit(buildingUnit) {
        if (this._buildingUnitList.includes(buildingUnit))
            return;
        this._buildingUnitList.push(buildingUnit);
    }
    static removeBuildingUnit(buildingUnit) {
        if (!this._buildingUnitList.includes(buildingUnit))
            return;
        this._buildingUnitList.splice(this._buildingUnitList.indexOf(buildingUnit), 1);
    }
    unitDeadAction() {
        super.unitDeadAction();
        BuildingUnit.removeBuildingUnit(this);
    }
}
BuildingUnit._buildingUnitList = [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FtZVVuaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ2FtZVVuaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFrQixNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFHdkQsT0FBTyxLQUFLLE1BQU0sTUFBTSxhQUFhLENBQUM7QUFDdEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxDQUFDLEdBQUcsQ0FBRSx3QkFBd0IsQ0FBRSxDQUFDO0FBRXhDLE1BQU0sT0FBZ0IsUUFBUTtJQThEMUIsWUFBWSxDQUFRLEVBQUUsQ0FBUSxFQUFFLElBQVM7UUFDckMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUVuRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFOUMsUUFBUSxDQUFDLE9BQU8sQ0FBRSxJQUFJLENBQUUsQ0FBQztJQUM3QixDQUFDO0lBbkVNLE1BQU0sQ0FBQyxNQUFNO1FBQ2hCLEtBQUksSUFBSSxDQUFDLEdBQUMs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